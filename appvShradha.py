#This file was generated by Shradha Saria(shradha3231@gmail.com)
#I am storing this on my Github Repository for Personal Reference

import datetime
import itertools #Implements iterators which run efficiently
import json
import requests
from pushbullet.pushbullet import PushBullet
from configparser import ConfigParser
from urllib.parse import urljoin

config = ConfigParser()
config.read("config.ini")
auth = config["push_bullet"]["api_key"]
cowin_api = config["api"]
search_params = config["search"]

p = PushBullet(auth)
push_to_devices = [x["iden"] for x in p.getDevices() if x["active"]] # allows to push to multiple devices.

numdays = int(search_params["num_days"]) #Converts String into Integer
district_ids = search_params["districts"].split(",")

base = datetime.datetime.today()
date_list = [base + datetime.timedelta(days=x) for x in range(0, numdays, 2)]
date_str = [x.strftime("%d-%m-%Y") for x in date_list]

header = {'User-Agent': "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) "
                            "AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36"}

appoinmentUrl = urljoin(cowin_api["api_url"], cowin_api["appointmentByDistrict"])
availability_data = {}
for date, dist_id in list(itertools.product(date_str, district_ids)):
    URL = appoinmentUrl.format(dist_id, date)
    response = requests.get(URL, headers=header)
    if response.ok and 'centers' in json.loads(response.text):
        resp_json = json.loads(response.text)['centers']
        if resp_json:
            for h in resp_json:
                for s in h['sessions']:
                    if s["min_age_limit"] == 18 and s['available_capacity'] > 0 and s["available_capacity_dose1"] > 0:
                        n, v = h["name"]+" "+str(h["pincode"]), s["vaccine"]
                        if v in availability_data:
                            if n not in availability_data[v]:
                                availability_data[v].append(n)
                        else:
                            availability_data[v] = [n]


def convert_to_string(d):
    res = ""
    for key in d:
        s = ", ".join(d[key])
        res = res + key + " available at " + s + "\n"
    return res

now = datetime.datetime.now()


if len(availability_data) > 0:
    s = convert_to_string(availability_data)
    for d in push_to_devices:
        p.pushNote(d, "VACCINE MIL GYAAAAA", s)
        print(str(now) + " Found vaccines ")
        print(s)
else:
    print(str(now) + " No vaccines available")
    # for d in push_to_devices:
        # p.pushNote(d, "No vaccine :(((", "kismat kharab hai boss")
